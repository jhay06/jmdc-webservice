"""types"""

type Patient{
	patient_name:String
	doctor_username:String
	contact_number:String
	email_address:String
	branch:String
	date_of_appointment:String
}

type UserInformation{
    username:String
    employee_no:String
    first_name:String
    middle_name:String
    last_name:String
    suffix:String
    contact_number:String
    email_address:String
    profile_id:Int
    affiliate_level_id:Int
    date_registered:String
	is_activated:Boolean
	is_temporary_password:Boolean

}

type Branch{
	branch_id:ID
	branch_code:String
	branch_name:String
	branch_address:String
	open_time:String
	close_time:String


}

type Appointment{
	appointment_id:ID
	patient_name:String
	patient_contact_no:String
	email_address:String
	branch_code:String
	branch_name:String
	appointment_date:String
	start_timeslot:String
	end_timeslot:String
	appoint_by:String
	is_cancelled:Boolean
	cancelled_date:String
	cancelled_by:String
	reference_code:String

}


type ProductClass{
	class_id:Int
	class_code:String
	class_name:String
}

type Product{
	service_id:Int
	product_code:String
	product_name:String
	class_id:Int
	class_code:String
	class_name:String
	product_description:String
	image_id:Int
	file_type:String
	file_name:String
	file_size:Int
	file_content_type:String
	file_content:String
}

"""end of types"""



#input_data#

input CancelAppointmentInput{
	reference_codes:[String!]!
	cancelled_by:String!
}

input ValidatorInput{
    validate:[String!]!
}

input AddAppointmentInput{
	patient_name:String!
	patient_contact_no:String!
	email_address:String!
	branch_code:String!
	branch_name:String!
	appointment_date:String!
	start_timeslot:String!
	end_timeslot:String!
	appoint_by:String

}
input UpdateAppointmentInput{
	reference_code:String!
	patient_name:String!
	patient_contact_no:String!
	email_address:String!
	branch_code:String!
	branch_name:String!
	appointment_date:String!
	start_timeslot:String!
	end_timeslot:String!
	modified_by:String!
}


input LoginInput{
	username:String!
	password:String!
}
input TwoFactorInput{
	username:String!
	authentication:String!
}

input RegistrationInput{
	username:String!
	employee_no:String
	first_name:String!
	middle_name:String
	last_name:String!
	suffix:String
	is_accreditation:Boolean!
	affiliate_level:Int
	contact_number:String
	email_address:String,
	password:String
}


input UpdateAccountInput{
	username:String
	new_username:String
	first_name:String
	middle_name:String
	last_name:String
	suffix:String
	contact_no:String
	email_address:String
	profile_id:Int
	affiliate_level_id:Int
	employee_no:String
	new_employee_no:String
	is_activated:Boolean
	date_registered:String

}

input PatientAppointmentInput{
	patient_name:String!
	doctor_username:String!
	contact_number:String
	email_address:String
	branch:String
	date_of_appointment:String
}


input AppointmentListInput{
	doctor_username:String!
	filtered_month:Int
	filtered_day:Int
	filtered_year:Int
	
}


input GetUserInfoInput{
    profile_id:Int!,
    affiliate_level:Int

}
input GetInfoByUsernameInput{
	username:String!
}

input ChangePasswordInput{
	username:String!
	new_password:String!
	old_password:String!
}

input ForgotPasswordInput{
	email_address:String!
}

input ValidateResetKeyInput{
	email_address:String!
	reset_key:String!
}
input ChangePasswordViaForgotInput{
	email_address:String!
	reset_key:String!
	new_password:String!
	username:String!
}

input GetAppointmentListByUsernameInput{
	username:String!
	branch_code:String
}
input GetCancelleAppointmentListByUsernameInput{
	username:String!

}
input GetActiveAppointmentByRangeInput{
	username:String!
	branch_code:String!
	from_range:String!
	to_range:String!
}
input GetAppointmentInformationInput{
	appointment_id:Int
}
input FileInput{
	file_type:String!
	file_content_type:String
	file_name:String!
	file_size:Int
	file_content:String!
}
input AddServiceInput{
	product_code:String
	product_name:String!
	class_id:Int!
	product_description:String!
	image_file:FileInput!
	created_by:String!

}
input UpdateServiceInput{
	service_id:Int!
	upload_new_file:Boolean!
	product_code:String
	product_name:String!
	class_id:Int!
	product_description:String!
	image_file:FileInput!
	modified_by:String!

}
input DeleteServiceInput{
	service_id:Int!
	deleted_by:String!
}
input GetProductByIdInput{
	service_id:Int
}
input GetProductByProductCodeInput{
	product_code:String!
}

#end of inputs#

"""response"""
type UserInfoListResponse{
    users:[UserInformation]
}
type BaseUserListResponse{
    type:String!
    message:String
    data:UserInfoListResponse
}

type LoginResponse{
	login_hash:String
	username:String
}


type BaseLoginResponse{
	type:String!
	message:String
	data:LoginResponse
}
type RegistrationResponse{
	registration_date:String	
	username:String

}
type BaseRegistrationResponse{
	type:String!
	message:String
	data:RegistrationResponse

}
type TwoFactorResponse{
	login_date:String	
	token:String
}

type BaseTwoFactorResponse{
	type:String!
	message:String
	data:TwoFactorResponse
}

type PatientAppointmentResponse{
	appointment_code:String
	date_process:String
}
type BasePatientAppointmentResponse{
	type:String!
	message:String
	data:PatientAppointmentResponse
}

type AppointmentListResponse{
	patients:[Patient]
	token:String
}
type BaseAppointmentListResponse{
	type:String!
	message:String
	data:AppointmentListResponse
	
}
type BaseValidatorResponse{
    type:String!
    message:String
    data:String
}

type UpdateAccountResponse{
	type:String!
	message:String
	data:LoginResponse
}

type IsEligibleResponse{
	type:String!
	message:String
}

type GetUserInfoResponse{
	type:String!
	message:String
	data:UserInformation
}
type BaseResponse{
	type:String!
	message:String
}

type GetBranchListResponse{
	type:String!
	message:String
	data:[Branch]
}
type GetActiveAppointmentListResponse{
	type:String!
	message:String
	data:[Appointment]
}
type GetCancelledAppointmentListResponse{
	type:String!
	message:String
	data:[Appointment]
}
type GetAppointmentInfoResponse{
	type:String!
	message:String
	data:Appointment
}

type AppointmentReferenceCode{
	code:String!
}
type GenerateAppointmentReferenceResponse{
	type:String!
	message:String
	data:AppointmentReferenceCode
}
type GetProductClassListResponse{
	type:String!
	message:String
	data:[ProductClass]
}

type GetProductListResponse{
	type:String!
	message:String
	data:[Product]
}
type GetProductInfoResponse{
	type:String!
	message:String
	data:Product
}

"""end of response"""


type Query{
	get_validator(input:ValidatorInput!):BaseValidatorResponse
    get_user_list(input:GetUserInfoInput!):BaseUserListResponse
	get_user_info(input:GetInfoByUsernameInput!):GetUserInfoResponse
	get_branches:GetBranchListResponse
	get_active_appointment_list:GetActiveAppointmentListResponse
	get_cancelled_appointment_list:GetCancelledAppointmentListResponse
	get_appointment_info(input:GetAppointmentInformationInput!):GetAppointmentInfoResponse
	get_active_appointment_by_username(input:GetAppointmentListByUsernameInput!):GetActiveAppointmentListResponse
	get_active_appointment_by_range(input:GetActiveAppointmentByRangeInput!):GetActiveAppointmentListResponse
	get_cancelled_appointment_by_username(input:GetAppointmentListByUsernameInput!):GetCancelledAppointmentListResponse
	get_product_class_list:GetProductClassListResponse
	get_services:GetProductListResponse
	get_product_by_id(input:GetProductByIdInput!):GetProductInfoResponse
	get_product_by_product_code(input:GetProductByProductCodeInput!):GetProductInfoResponse
}
type Mutation{
	change_password_via_forgot(input:ChangePasswordViaForgotInput!):BaseResponse
	is_valid_key(input:ValidateResetKeyInput!):BaseResponse
	forgot_password(input:ForgotPasswordInput!):BaseResponse
	login(input:LoginInput!):BaseLoginResponse
	register(input:RegistrationInput!):BaseRegistrationResponse
	change_password(input:ChangePasswordInput!):BaseResponse
	update_account(input:UpdateAccountInput!):UpdateAccountResponse
	add_appointment(input:AddAppointmentInput!):BaseResponse
	generate_appointment_reference_code:GenerateAppointmentReferenceResponse
	cancel_appointment(input:CancelAppointmentInput!):BaseResponse
	update_appointment(input:UpdateAppointmentInput!):BaseResponse
	add_service(input:AddServiceInput!):BaseResponse
	delete_service(input:DeleteServiceInput!):BaseResponse
	update_service(input:UpdateServiceInput!):BaseResponse
}
